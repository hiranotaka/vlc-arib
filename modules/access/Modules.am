SUBDIRS = rtp
noinst_LTLIBRARIES =

libfilesystem_plugin_la_SOURCES = \
	fs.h \
	file.c \
	directory.c \
	fs.c
libfilesystem_plugin_la_CFLAGS = $(AM_CFLAGS)
libfilesystem_plugin_la_LIBADD = $(AM_LIBADD)
if HAVE_WIN32
libfilesystem_plugin_la_LIBADD += -lshlwapi
endif

libidummy_plugin_la_SOURCES = idummy.c
libidummy_plugin_la_CFLAGS = $(AM_CFLAGS)
libidummy_plugin_la_LIBADD = $(AM_LIBADD)

libsdp_plugin_la_SOURCES = sdp.c
libsdp_plugin_la_CFLAGS = $(AM_CFLAGS)
libsdp_plugin_la_LIBADD = $(AM_LIBADD)

libzip_plugin_la_SOURCES = zip/zip.h zip/zipstream.c zip/zipaccess.c
libzip_plugin_la_CFLAGS = $(AM_CFLAGS) $(MINIZIP_CFLAGS)
libzip_plugin_la_LIBADD = $(AM_LIBADD) $(MINIZIP_LIBS)
if HAVE_ZLIB
libvlc_LTLIBRARIES += libzip_plugin.la
if !HAVE_MINIZIP
libunzip_la_SOURCES = zip/unzip/unzip.c zip/unzip/unzip.h zip/unzip/crypt.h \
	zip/unzip/ioapi.c zip/unzip/ioapi.h
libunzip_la_LIBADD = -lz
libunzip_la_LDFLAGS = -static
noinst_LTLIBRARIES += libunzip.la
libzip_plugin_la_CFLAGS += -I$(srcdir)/zip/unzip
libzip_plugin_la_LIBADD += libunzip.la
endif
endif

SOURCES_access_directory = directory.c
SOURCES_access_gnomevfs = gnomevfs.c
SOURCES_access_eyetv = eyetv.m
SOURCES_dc1394 = dc1394.c
SOURCES_dv1394 = dv.c
SOURCES_linsys_sdi = linsys/linsys_sdi.c linsys/linsys_sdi.h
SOURCES_linsys_hdsdi = \
	linsys/linsys_hdsdi.c \
	linsys/linsys_sdiaudio.h \
	linsys/linsys_sdivideo.h \
	$(NULL)
SOURCES_access_jack = jack.c
SOURCES_access_mtp = mtp.c
SOURCES_access_imem = imem.c
SOURCES_access_avio = avio.c avio.h ../codec/avcodec/cpu.c
SOURCES_access_attachment = attachment.c
SOURCES_access_vdr = vdr.c
SOURCES_libbluray = bluray.c
SOURCES_decklink = decklink.cpp

SOURCES_access_rar = rar/rar.c rar/rar.h rar/access.c
SOURCES_stream_filter_rar = rar/rar.c rar/rar.h rar/stream.c

if HAVE_QTKIT
libqtcapture_plugin_la_SOURCES = qtcapture.m
libqtcapture_plugin_la_LIBADDD = $(AM_LIBADD)
libqtcapture_plugin_la_LDFLAGS = -Wl,-framework,Cocoa -Wl,-framework,QTKit -Wl,-framework,CoreVideo -Wl,-framework,QuartzCore

libqtsound_plugin_la_SOURCES = qtsound.m
libqtsound_plugin_la_LIBADD = $(AM_LIBADD)
libqtsound_plugin_la_LDFLAGS = -Wl,-framework,Cocoa -Wl,-framework,QTKit -Wl,-framework,CoreAudio

libvlc_LTLIBRARIES += \
        libqtcapture_plugin.la \
        libqtsound_plugin.la \
        $(NULL)
endif

libvlc_LTLIBRARIES += \
	libfilesystem_plugin.la \
	libidummy_plugin.la \
	libaccess_udp_plugin.la \
	libaccess_tcp_plugin.la \
	libaccess_http_plugin.la \
	libaccess_ftp_plugin.la \
	libaccess_imem_plugin.la \
	libaccess_attachment_plugin.la \
        libsdp_plugin.la \
	libaccess_rar_plugin.la \
	libstream_filter_rar_plugin.la \
	libaccess_vdr_plugin.la \
	$(NULL)


### Audio capture ###

libaccess_oss_plugin_la_SOURCES = oss.c
libaccess_oss_plugin_la_CFLAGS = $(AM_CFLAGS)
libaccess_oss_plugin_la_LIBADD = $(AM_LIBADD) $(OSS_LIBS)
if HAVE_OSS
libvlc_LTLIBRARIES += libaccess_oss_plugin.la
endif

libaccess_alsa_plugin_la_SOURCES = alsa.c
libaccess_alsa_plugin_la_CFLAGS = $(AM_CFLAGS) $(ALSA_CFLAGS)
libaccess_alsa_plugin_la_LIBADD = $(AM_LIBADD) $(ALSA_LIBS)
if HAVE_ALSA
libvlc_LTLIBRARIES += libaccess_alsa_plugin.la
endif

libpulsesrc_plugin_la_SOURCES = \
	../audio_output/vlcpulse.c \
	../audio_output/vlcpulse.h \
	pulse.c
libpulsesrc_plugin_la_CFLAGS= $(AM_CFLAGS) $(PULSE_CFLAGS)
libpulsesrc_plugin_la_LIBADD = $(AM_LIBADD) $(PULSE_LIBS)
if HAVE_PULSE
libvlc_LTLIBRARIES += libpulsesrc_plugin.la
endif


### Video capture ###

libshm_plugin_la_SOURCES = shm.c
libshm_plugin_la_CFLAGS = $(AM_CFLAGS)
libshm_plugin_la_LIBADD = $(AM_LIBADD)
if !HAVE_WIN32
if !HAVE_OS2
libvlc_LTLIBRARIES += libshm_plugin.la
endif
endif

libv4l2_plugin_la_SOURCES = \
	v4l2/videodev2.h \
	v4l2/v4l2.c \
	v4l2/video.c \
	v4l2/demux.c \
	v4l2/access.c \
	v4l2/radio.c \
	v4l2/controls.c \
	v4l2/lib.c \
	v4l2/v4l2.h
libv4l2_plugin_la_CFLAGS = $(AM_CFLAGS)
libv4l2_plugin_la_LIBADD = $(AM_LIBADD) $(LIBDL) $(LIBM)
if HAVE_V4L2
libvlc_LTLIBRARIES += libv4l2_plugin.la
endif

libdshow_plugin_la_SOURCES = dshow/vlc_dshow.h dshow/dshow.cpp dshow/access.h \
	dshow/filter.cpp dshow/filter.h dshow/crossbar.cpp
libdshow_plugin_la_CFLAGS = $(AM_CFLAGS)
libdshow_plugin_la_LIBADD = $(AM_LIBADD) -lole32 -loleaut32 -luuid -lstrmiids -lksuser
if HAVE_WIN32
libvlc_LTLIBRARIES += libdshow_plugin.la
endif


### Screen grab ###

libxcb_screen_plugin_la_SOURCES = screen/xcb.c
libxcb_screen_plugin_la_CFLAGS = $(AM_CFLAGS) \
	$(XCB_CFLAGS) $(XCB_COMPOSITE_CFLAGS)
libxcb_screen_plugin_la_LIBADD = $(AM_LIBADD) \
	$(XCB_LIBS) $(XCB_COMPOSITE_LIBS)
if HAVE_XCB
libvlc_LTLIBRARIES += libxcb_screen_plugin.la
endif

libscreen_plugin_la_SOURCES = screen/screen.c screen/screen.h
libscreen_plugin_la_CFLAGS = $(AM_CFLAGS)
libscreen_plugin_la_LIBADD = $(AM_LIBADD)
if HAVE_WIN32
libscreen_plugin_la_SOURCES += screen/win32.c
libscreen_plugin_la_LIBADD += -lgdi32
libvlc_LTLIBRARIES += libscreen_plugin.la
endif
if HAVE_DARWIN
libscreen_plugin_la_SOURCES += screen/mac.c
libscreen_plugin_la_LDFLAGS = $(AM_LDFLAGS)
libscreen_plugin_la_LDFLAGS += "-Wl,-framework,OpenGL,-framework,ApplicationServices"
endif


### Optical media ###

SOURCES_cdda = \
        cdda.c \
        vcd/cdrom.c \
        vcd/cdrom.h \
        vcd/cdrom_internals.h
SOURCES_vcd = \
	vcd/vcd.c \
	vcd/cdrom.c \
	vcd/cdrom.h \
	vcd/cdrom_internals.h
SOURCES_vcdx = \
	vcdx/access.h vcdx/access.c \
	vcdx/vcd.c vcdx/vcd.h \
	vcdx/vcdplayer.h vcdx/vcdplayer.c \
	vcdx/info.c vcdx/info.h

SOURCES_dvdnav = dvdnav.c
SOURCES_dvdread = dvdread.c

libaccess_bd_plugin_la_SOURCES = bd/bd.c bd/mpls.c bd/mpls.h bd/clpi.c bd/clpi.h
libaccess_bd_plugin_la_CFLAGS = $(AM_CFLAGS)
libaccess_bd_plugin_la_LIBADD = $(AM_LIBADD)
libvlc_LTLIBRARIES += libaccess_bd_plugin.la


### Digital TV ###

libdtv_plugin_la_SOURCES = \
	dtv/dtv.h \
	dtv/access.c
libdtv_plugin_la_CFLAGS = $(AM_CFLAGS)
libdtv_plugin_la_LIBADD = $(AM_LIBADD)

if HAVE_LINUX_DVB
libdtv_plugin_la_SOURCES += dtv/linux.c
libdtv_plugin_la_CFLAGS += -DHAVE_LINUX_DVB
if HAVE_DVBPSI
libdtv_plugin_la_SOURCES += dtv/en50221.c dtv/en50221.h
libdtv_plugin_la_CFLAGS += -DHAVE_DVBPSI $(DVBPSI_CFLAGS)
libdtv_plugin_la_LIBADD += $(DVBPSI_LIBS)
endif
libvlc_LTLIBRARIES += libdtv_plugin.la
endif

if HAVE_WIN32
# Work-around automake bug:
# Use an import library for C++ to retain C linker on other platforms.
libbda_la_SOURCES = dtv/bdadefs.h dtv/bdagraph.cpp dtv/bdagraph.hpp
libbda_la_CXXFLAGS = $(AM_CXXFLAGS)
libbda_la_LDFLAGS = -static
libbda_la_LIBADD = -lstrmiids -lole32 -loleaut32 -luuid
noinst_LTLIBRARIES += libbda.la

libdtv_plugin_la_DEPENDENCIES = libbda.la
libdtv_plugin_la_LIBADD += libbda.la -lstdc++
libvlc_LTLIBRARIES += libdtv_plugin.la
endif

# Old Linux DVB scanner
libdvb_plugin_la_SOURCES = \
	dvb/access.c \
	dvb/linux_dvb.c \
	dvb/scan.c dvb/scan.h \
	dvb/dvb.h
libdvb_plugin_la_CFLAGS = $(AM_CFLAGS)
libdvb_plugin_la_LIBADD = $(AM_LIBADD)
if HAVE_LINUX_DVB
libvlc_LTLIBRARIES += libdvb_plugin.la
if HAVE_DVBPSI
libdvb_plugin_la_CFLAGS += $(DVBPSI_CFLAGS)
libdvb_plugin_la_LIBADD += $(DVBPSI_LIBS)
endif
endif

### Network streams ###

libaccess_smb_plugin_la_SOURCES = smb.c
libaccess_smb_plugin_la_CFLAGS = $(AM_CFLAGS)
libaccess_smb_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_access_smb)
if HAVE_WIN32
libaccess_smb_plugin_la_LIBADD += -lmpr
endif
libvlc_LTLIBRARIES += $(LTLIBaccess_smb)
EXTRA_LTLIBRARIES += libaccess_smb_plugin.la

SOURCES_access_udp = udp.c
SOURCES_access_tcp = tcp.c
SOURCES_access_http = http.c
SOURCES_htcpcp = htcpcp.c
SOURCES_access_ftp = ftp.c
SOURCES_access_sftp = sftp.c

libaccess_mms_plugin_la_SOURCES = \
	mms/mms.c mms/mms.h \
	mms/mmsh.c mms/mmsh.h \
	mms/mmstu.c mms/mmstu.h \
	mms/buffer.c mms/buffer.h \
	mms/asf.h mms/asf.c \
	../demux/asf/libasf_guid.h
libaccess_mms_plugin_la_CFLAGS = $(AM_CFLAGS)
libaccess_mms_plugin_la_LIBADD = $(AM_LIBADD) $(SOCKET_LIBS)
libvlc_LTLIBRARIES += libaccess_mms_plugin.la

libaccess_realrtsp_plugin_la_SOURCES = \
	rtsp/access.c \
	rtsp/rtsp.c rtsp/rtsp.h \
	rtsp/real.c rtsp/real.h \
	rtsp/real_rmff.c rtsp/real_rmff.h \
	rtsp/real_sdpplin.c rtsp/real_sdpplin.h \
	rtsp/real_asmrp.c
libaccess_realrtsp_plugin_la_CFLAGS = $(AM_CFLAGS)
libaccess_realrtsp_plugin_la_LIBADD = $(AM_LIBADD) $(SOCKET_LIBS)
libvlc_LTLIBRARIES += $(LTLIBaccess_realrtsp)
EXTRA_LTLIBRARIES += libaccess_realrtsp_plugin.la
